{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"video-background\"\n};\nconst _hoisted_2 = [\"poster\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 视频元素 \"), _createElementVNode(\"video\", {\n    ref: \"videoEl\",\n    class: \"background-video\",\n    poster: $props.poster,\n    autoplay: \"\",\n    muted: \"\",\n    loop: \"\",\n    playsinline: \"\"\n  }, [_createElementVNode(\"source\", {\n    src: $props.videoSrc,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_3)], 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" 遮罩层 \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"video-overlay\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" 内容插槽 \"), _createElementVNode(\"div\", _hoisted_4, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","ref","poster","$props","autoplay","muted","loop","playsinline","src","videoSrc","type","_hoisted_3","_hoisted_2","_hoisted_4","_renderSlot","_ctx","$slots","undefined"],"sources":["D:\\code\\KL\\kldesign\\kldesign\\src\\components\\VideoBackground.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-background\">\r\n      <!-- 视频元素 -->\r\n      <video \r\n        ref=\"videoEl\"\r\n        class=\"background-video\"\r\n        :poster=\"poster\"\r\n        autoplay\r\n        muted\r\n        loop\r\n        playsinline\r\n      >\r\n        <source :src=\"videoSrc\" type=\"video/mp4\">\r\n      </video>\r\n  \r\n      <!-- 遮罩层 -->\r\n      <div class=\"video-overlay\"></div>\r\n  \r\n      <!-- 内容插槽 -->\r\n      <div class=\"content\">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue'\r\n  \r\n  const props = defineProps({\r\n    videoSrc: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    poster: {\r\n      type: String,\r\n      default: '/images/video-poster.jpg'\r\n    }\r\n  })\r\n  \r\n  const videoEl = ref(null)\r\n  \r\n  // 确保移动端兼容\r\n  onMounted(() => {\r\n    if (videoEl.value) {\r\n      videoEl.value.play().catch(error => {\r\n        console.log('自动播放被阻止:', error)\r\n      })\r\n    }\r\n  })\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .video-background {\r\n    position: relative;\r\n    min-height: 100vh;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .background-video {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    width: auto;\r\n    height: auto;\r\n    z-index: 0;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .video-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(43, 16, 85, 0.6); // 原渐变色的半透明叠加\r\n    z-index: 1;\r\n  }\r\n  \r\n  .content {\r\n    position: relative;\r\n    z-index: 2;\r\n    padding: 2rem;\r\n    color: white;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;mBADjC;mBAAA;;EAmBWA,KAAK,EAAC;AAAS;;uBAlBtBC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,UAAa,EACbC,mBAAA,CAUQ;IATNC,GAAG,EAAC,SAAS;IACbL,KAAK,EAAC,kBAAkB;IACvBM,MAAM,EAAEC,MAAA,CAAAD,MAAM;IACfE,QAAQ,EAAR,EAAQ;IACRC,KAAK,EAAL,EAAK;IACLC,IAAI,EAAJ,EAAI;IACJC,WAAW,EAAX;MAEAP,mBAAA,CAAyC;IAAhCQ,GAAG,EAAEL,MAAA,CAAAM,QAAQ;IAAEC,IAAI,EAAC;0BAZrCC,UAAA,E,iBAAAC,UAAA,GAeMb,mBAAA,SAAY,E,0BACZC,mBAAA,CAAiC;IAA5BJ,KAAK,EAAC;EAAe,6BAE1BG,mBAAA,UAAa,EACbC,mBAAA,CAEM,OAFNa,UAEM,GADJC,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}